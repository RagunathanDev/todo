{"version":3,"sources":["Component/List.js","Util/Util.js","Task/Task.js","App.js","reportWebVitals.js","index.js"],"names":["List","Item","remove","changeTask","edit","status","Card","className","Checkbox","checked","onChange","inputProps","taskName","IconButton","aria-label","color","onClick","disabled","generateID","i","gen","Task","this","id","next","value","date","Date","App","React","todoName","setTodoName","task","setTask","removeTask","filter","item","change","map","console","log","editTask","newTaskName","prompt","type","e","target","Button","variant","find","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.002d2390.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport \"./List.css\";\r\nexport default function List({ Item, remove, changeTask, edit }) {\r\n  return Item.status === 0 ? (\r\n    <Card className='card_TopContainer'>\r\n      <div className='card_Container'>\r\n        <div className='Container'>\r\n          <div className='task_Container'>\r\n            <Checkbox\r\n              checked={Item.status === 1 ? true : false}\r\n              onChange={() => changeTask()}\r\n              inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n            />\r\n            <div className='task_Div'>\r\n              <p className='task'>{Item.taskName}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='Icon__Container'>\r\n            <IconButton\r\n              aria-label='delete'\r\n              color='primary'\r\n              onClick={() => remove()}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              aria-label='edit'\r\n              color='primary'\r\n              onClick={() => edit()}>\r\n              <EditIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  ) : (\r\n    <Card className='card_TopContainer'>\r\n      <div className='card_Container'>\r\n        <div className='Container'>\r\n          <div className='task_Container'>\r\n            <Checkbox\r\n              checked={Item.status === 1 ? true : false}\r\n              onChange={() => changeTask()}\r\n              inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n            />\r\n            <p className='task'>{Item.taskName}</p>\r\n          </div>\r\n\r\n          <div className='Icon__Container'>\r\n            <IconButton\r\n              aria-label='delete'\r\n              color='primary'\r\n              onClick={() => remove()}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              disabled\r\n              aria-label='edit'\r\n              color='primary'\r\n              onClick={() => edit()}>\r\n              <EditIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n","//Auto generate Id\r\n\r\nexport function* generateID() {\r\n  let i = 0;\r\n  while (true) {\r\n    yield i++;\r\n  }\r\n}\r\n","import { generateID } from \"../Util/Util\";\r\n\r\nconst gen = generateID();\r\n\r\nexport function Task(taskName) {\r\n  this.id = gen.next().value;\r\n  this.taskName = taskName;\r\n  this.status = 0;\r\n  this.date = new Date();\r\n}\r\n\r\n//export const Task = [];\r\n","import * as React from \"react\";\nimport \"./App.css\";\nimport List from \"./Component/List\";\nimport { Task } from \"./Task/Task\";\nimport Card from \"@material-ui/core/Card\";\nimport { Button } from \"@material-ui/core\";\nfunction App() {\n  const [todoName, setTodoName] = React.useState(\"\");\n  const [task, setTask] = React.useState([]);\n\n  // const [pendingTask,setPendingTask] = React.useState([]);\n  // const [completeTask,setcompleteTask] = React.useState([]);\n\n  // React.useEffect(() => {\n  //  task.forEach((item)=>{\n  //    const pending = task.filter((item)=> item.status!==1)\n  //  })\n  // }, [task]);\n\n  function removeTask(id) {\n    const remove = task.filter((item) => item.id !== id);\n    setTask(remove);\n  }\n\n  function changeTask(id) {\n    const change = task.map((item) => {\n      if (item.id === id) {\n        if (item.status === 1) {\n          return { ...item, status: 0 };\n        } else {\n          return { ...item, status: 1 };\n        }\n      }\n      return item;\n    });\n    console.log(change);\n    setTask(change);\n  }\n\n  function editTask(id) {\n    const newTaskName = prompt(\"Enter the task Name\");\n    console.log(newTaskName);\n    const change = task.map((item) => {\n      if (item.id === id && newTaskName !== \"\" && newTaskName !== null) {\n        return { ...item, taskName: newTaskName };\n      }\n      return item;\n    });\n    console.log(change);\n    setTask(change);\n  }\n  const addTodo = () => {\n    const alredyPresent = task.find((item) => item.taskName === todoName);\n    if (!alredyPresent) setTask([...task, new Task(todoName)]);\n    else alert(\"TaskName Already Present\");\n    setTodoName(\"\");\n  };\n\n  return (\n    <div className='App'>\n      <div className='APP__InputContainer'>\n        <h1 className='Heading'>TODO</h1>\n        <div className='App_SearchBoxContainer'>\n          <input\n            type='text'\n            value={todoName}\n            className='App__SearchBox'\n            onChange={(e) => setTodoName(e.target.value)}\n          />\n        </div>\n        <div className='App_SubmitContainer'>\n          {/* <input\n              type='button'\n              className='App__Submit'\n              value='Add Task'\n              onClick={() => {\n                setTask([...task, new Task(todoName)]);\n              }}\n            /> */}\n          <Button\n            variant='contained'\n            color='primary'\n            onClick={() => {\n              todoName !== \"\" ? addTodo() : alert(\"Enter Valid Task\");\n            }}>\n            ADD\n          </Button>\n        </div>\n      </div>\n      <div className='__card'>\n        <Card className='card_TopContainer'>\n          <p className='card_Heading'>Pending List</p>\n          <hr></hr>\n          <div className='card_Container'>\n            {task.map((item) => {\n              return (\n                item.status === 0 && (\n                  <List\n                    key={item.id}\n                    Item={item}\n                    remove={() => removeTask(item.id)}\n                    changeTask={() => changeTask(item.id)}\n                    edit={() => editTask(item.id)}\n                  />\n                )\n              );\n            })}\n          </div>\n        </Card>\n        <Card className='card_TopContainer'>\n          <p className='card_Heading'>Completed List</p>\n          <hr></hr>\n          <div className='card_Container'>\n            {task.map((item) => {\n              return (\n                item.status === 1 && (\n                  <List\n                    key={item.id}\n                    Item={item}\n                    remove={() => removeTask(item.id)}\n                    changeTask={() => changeTask(item.id)}\n                    edit={() => editTask(item.id)}\n                  />\n                )\n              );\n            })}\n          </div>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}